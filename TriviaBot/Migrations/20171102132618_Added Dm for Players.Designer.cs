// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using TriviaBot.Models;

namespace TriviaBot.Migrations
{
    [DbContext(typeof(TriviaContext))]
    [Migration("20171102132618_Added Dm for Players")]
    partial class AddedDmforPlayers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("TriviaBot.Models.Answer", b =>
                {
                    b.Property<Guid>("AnswerId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsCorrect");

                    b.Property<Guid?>("QuestionId");

                    b.Property<string>("Statement");

                    b.HasKey("AnswerId");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("TriviaBot.Models.Attempt", b =>
                {
                    b.Property<Guid>("AttemptId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AnswerId");

                    b.Property<bool>("Correct");

                    b.Property<Guid>("PlayerId");

                    b.Property<Guid?>("QuestionId");

                    b.HasKey("AttemptId");

                    b.HasIndex("AnswerId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("QuestionId");

                    b.ToTable("Attempts");
                });

            modelBuilder.Entity("TriviaBot.Models.Player", b =>
                {
                    b.Property<Guid>("PlayerId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DirectMessage");

                    b.Property<string>("PlayerMention");

                    b.Property<string>("PlayerName");

                    b.Property<string>("PlayerSlackId");

                    b.HasKey("PlayerId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("TriviaBot.Models.Question", b =>
                {
                    b.Property<Guid>("QuestionId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<string>("Statement");

                    b.HasKey("QuestionId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("TriviaBot.Models.Answer", b =>
                {
                    b.HasOne("TriviaBot.Models.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId");
                });

            modelBuilder.Entity("TriviaBot.Models.Attempt", b =>
                {
                    b.HasOne("TriviaBot.Models.Answer", "Answer")
                        .WithMany()
                        .HasForeignKey("AnswerId");

                    b.HasOne("TriviaBot.Models.Player", "Player")
                        .WithMany("Attempts")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TriviaBot.Models.Question", "Question")
                        .WithMany("Attempts")
                        .HasForeignKey("QuestionId");
                });
#pragma warning restore 612, 618
        }
    }
}
